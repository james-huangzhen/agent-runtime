# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: SandboxService API
    version: 0.0.1
paths:
    /api/v1/sandbox:
        get:
            tags:
                - SandboxService
            operationId: SandboxService_GetSandboxStatus
            parameters:
                - name: sandboxId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/sandbox.v1.GetSandboxStatusResponse'
        post:
            tags:
                - SandboxService
            operationId: SandboxService_CreateSandbox
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/sandbox.v1.CreateSandboxRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/sandbox.v1.CreateSandboxResponse'
        delete:
            tags:
                - SandboxService
            operationId: SandboxService_DeleteSandbox
            parameters:
                - name: sandboxId
                  in: query
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/sandbox.v1.DeleteSandboxResponse'
    /api/v1/sandbox/types:
        get:
            tags:
                - SandboxService
            operationId: SandboxService_GetSandBoxTypes
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/sandbox.v1.GetSandboxTypesResponse'
components:
    schemas:
        common.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be one of google rpc code or custom code.
                    format: int32
                message:
                    type: string
                    description: Message for recording the error information.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the additional supplementary error details.
            description: |-
                Status carries the response status information.
                 Reference: https://github.com/grpc/grpc/blob/master/src/proto/grpc/status/status.proto
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        sandbox.v1.Config:
            type: object
            properties:
                runtimeType:
                    type: integer
                    format: enum
        sandbox.v1.CreateSandboxRequest:
            type: object
            properties:
                sandboxType:
                    type: integer
                    description: The type of the sandbox, e.g. "fs", "browser", etc.
                    format: enum
                config:
                    allOf:
                        - $ref: '#/components/schemas/sandbox.v1.Config'
                    description: The configuration of the sandbox, which is a JSON string.
        sandbox.v1.CreateSandboxResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/sandbox.v1.CreateSandboxResponse_Data'
                status:
                    $ref: '#/components/schemas/common.Status'
        sandbox.v1.CreateSandboxResponse_Data:
            type: object
            properties:
                sandboxId:
                    type: string
                state:
                    type: integer
                    format: enum
        sandbox.v1.DeleteSandboxResponse:
            type: object
            properties:
                status:
                    $ref: '#/components/schemas/common.Status'
        sandbox.v1.GetSandboxStatusResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/sandbox.v1.GetSandboxStatusResponse_Data'
                status:
                    $ref: '#/components/schemas/common.Status'
        sandbox.v1.GetSandboxStatusResponse_Data:
            type: object
            properties:
                state:
                    type: integer
                    format: enum
                sandboxId:
                    type: string
                sandboxType:
                    type: integer
                    format: enum
                config:
                    $ref: '#/components/schemas/sandbox.v1.Config'
                createdAt:
                    type: string
                updatedAt:
                    type: string
                errorMessage:
                    type: string
        sandbox.v1.GetSandboxTypesResponse:
            type: object
            properties:
                data:
                    $ref: '#/components/schemas/sandbox.v1.GetSandboxTypesResponse_Data'
                status:
                    $ref: '#/components/schemas/common.Status'
        sandbox.v1.GetSandboxTypesResponse_Data:
            type: object
            properties:
                sandboxTypes:
                    type: array
                    items:
                        type: integer
                        format: enum
tags:
    - name: SandboxService
